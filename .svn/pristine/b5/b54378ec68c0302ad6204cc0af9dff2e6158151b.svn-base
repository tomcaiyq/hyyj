<template>
  <div class="home content">
    <div class="button">
      <button size="small" class="btnTitle   btnActive"><router-link  to='/VideoNews'>视频新闻</router-link></button>
      <button size="small" class="btnTitle"><router-link  to='/ImgShow'>海洋图片</router-link></button>
      <button size="small" class="btnTitle"><router-link  to='/OceanNews'>海洋新闻</router-link></button>
      <button size="small" class="btnTitle"><router-link  to='/Knowledge'>百科知识</router-link></button>
    </div>
    <div style="font-size:20px;color:#000;font-weight:bold;margin:15px;">{{name}}</div>
    <!-- <video-player
      class="video-player vjs-custom-skin"
      ref="videoPlayer"
      :playsinline="true"
      :options="playerOptions"
    ></video-player> -->
  </div>
</template>
<script>
import { demo, formatData } from "../../utils";
import Api from "../../api";
export default {
  data() {
    return {
      name: "",
      url: "",
      ref:"",
      // 视频播放
      // playerOptions: {
      //   playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度
      //   autoplay: true, //如果true,浏览器准备好时开始回放。
      //   muted: false, // 默认情况下将会消除任何音频。
      //   loop: false, // 导致视频一结束就重新开始。
      //   preload: "auto", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）
      //   language: "zh-CN",
      //   aspectRatio: "16:9",
      //    // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如"16:9"或"4:3"）
      //   fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。
      //   sources: [
      //     {
      //       type: "",
      //       src:"http://player.youku.com/embed/XMzYyNjE4MzY2MA==?client_id=a2f5e1fb8820636b&password=&autoplay=true#www.oceanguide.org.cn" //url地址
      //     }
      //   ],
      //   poster: "", //你的封面地址
      //   notSupportedMessage: "此视频暂无法播放，请稍后再试", //允许覆盖Video.js无法播放媒体源时显示的默认信息。
      //   controlBar: {
      //     timeDivider: true,
      //     durationDisplay: true,
      //     remainingTimeDisplay: false,
      //     fullscreenToggle: true //全屏按钮
      //   }
      // },
      
    };
  },
  methods: {
    loadVideo() {}
  },
  created() {
    this.name = this.$route.query.name;
    console.log(this.name);
    this.url = this.$route.query.url;
    console.log(this.url);
  }
};
</script>
<style scoped>
.home {
  height: 1200px;
}
</style>